@startuml
autonumber
'hide footbox
actor "Administrator" as ADM

participant ":UploadUsersFromFileUI" as UI
participant ":UploadUsersFromFileController" as CTRL
participant "csvR:CSVReader" as CSVR
participant "userSt :SNSUserStore" as USR_STR
participant "comp :Company" as COMP
participant "mapper: SNSUserMapper" as MAPPER
participant "dto: SNSUserDTO" as DTO
participant "mapper: SNSUserRegisterInfoMapper" as USER_INFO_MAPPER
participant "dto: SNSUserRegisterInfoDTO" as USER_INFO_DTO
participant "user :SNSUser" as USR
participant ":PasswordGenerator" as PWDGEN
participant "auth :AuthFacade" as AUTH
participant ":EmailSender" as EMAIl
participant "userDataList :List<Array<String>>" as LIST
participant "userRegisterInfoList: List<SNSUserRegisterInfoDTO>" as USER_INFO_LIST

activate ADM
ADM -> UI : asks to load users from a file
activate UI
UI --> ADM : requests data (file path name)
deactivate UI

ADM -> UI : types requested data
activate UI

    UI -> CTRL : csvReader = createCsvReader(filePathName)
    activate CTRL
        CTRL -> CSVR ** : csvReader = create(filePathName)
    deactivate CTRL

UI --> ADM : asks to confirm action
deactivate UI

ADM -> UI : confirms action
activate UI

    UI -> CTRL : userRegisterInfoList = readAndUpload()
    activate CTRL

        CTRL -> COMP : store = getSNSUserStore()
        activate COMP
        deactivate COMP

        CTRL -> CSVR : userDataList = readSNSUsersData()
        activate CSVR
        deactivate CSVR

        CTRL -> USR_STR : userRegisterInfoList = registerListOfUsers(userDataList)
        activate USR_STR

        loop for each SNSUser register
        note right of USR_STR
            snsUserData is String[Name, Sex, Birth Date, Address, Phone Number, E-mail, SNS User Number and Citizen Card Number] 
        end note
            USR_STR -> MAPPER : userDto = toDto(snsUserData)
            activate MAPPER
                MAPPER -> DTO ** : create(citizenCard, snsNumber, name, birthDay, gender, phoneNumber, email, address)
            deactivate MAPPER


            USR_STR -> USR_STR : snsUser = createSNSUser(userDto)
            activate USR_STR
                USR_STR -> USR** : create(userDto)
            deactivate USR_STR

            USR_STR -> USR_STR : validateSNSUser(snsUser)
            activate USR_STR
                USR_STR -> USR : email = getEmail(snsUser)
                activate USR
                deactivate USR

                USR_STR -> COMP : auth = getAuthFacade()
                activate COMP
                deactivate COMP

                USR_STR -> AUTH : existsUser(email)
                activate AUTH
                deactivate AUTH

                USR_STR -> USR_STR : checkDuplicates(snsUser)
                activate USR_STR
            deactivate USR_STR

            deactivate USR_STR

            USR_STR -> USR_STR : userRegisterInfoDto = saveSNSUser(snsUser)
            activate USR_STR

                USR_STR -> USER_INFO_MAPPER : userRegisterInfoDto = toDto(snsUser)
                activate USER_INFO_MAPPER

                    USER_INFO_MAPPER -> USR : name = getName()
                    activate USR
                    deactivate USR

                    USER_INFO_MAPPER -> USR : email = getEmail()
                    activate USR
                    deactivate USR

                    USER_INFO_MAPPER -> PWDGEN : pwd = generatePwd()
                    activate PWDGEN
                    deactivate PWDGEN

                    USER_INFO_MAPPER -> USER_INFO_DTO ** : create(name, email, pwd, "SNS_USER")

                deactivate USER_INFO_MAPPER

            USR_STR -> AUTH : addUserWithRole(userRegisterInfoDto)
            activate AUTH
            deactivate AUTH

            USR_STR -> USR_STR : addSNSUser(snsUser)
            activate USR_STR
            deactivate USR_STR
           
            USR_STR -> EMAIl : sendEmail(email)
      
            activate EMAIl
            deactivate EMAIl

            deactivate USR_STR
        deactivate USR_STR
        end
    deactivate CTRL

UI --> ADM : informs operation success
deactivate UI

deactivate ADM

@enduml